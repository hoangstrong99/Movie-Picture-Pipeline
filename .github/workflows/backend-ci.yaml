name: Backend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"

# Define environment variables used in multiple jobs
env:
  PYTHON_VERSION: "3.11"

jobs:
  lint:
    name: Backend run lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Pipenv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install Pipenv + flake8
        run: |
          pip install pipenv flake8
          pipenv install

      - name: Run lint
        run: pipenv run lint

  test:
    name: Backend run test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Pipenv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install Pipenv
        run: |
          pip install pipenv
          pipenv install

      - name: Run tests
        run: pipenv run test

  build:
    name: Build & push image
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Pipenv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: pipenv-${{ runner.os }}-${{ hashFiles('backend/Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ runner.os }}-

      - name: Install Pipenv
        run: |
          pip install pipenv
          pipenv install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, Tag, and Push docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # Example optional Docker caching (local caching only)
      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: ~/docker-cache
          key: docker-${{ github.sha }}-backend
          restore-keys: |
            docker-${{ github.sha }}-